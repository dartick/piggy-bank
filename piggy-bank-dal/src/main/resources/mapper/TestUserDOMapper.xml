<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.xiaoheshan.piggy.bank.dal.dao.user.TestUserDOMapperExt">
  <resultMap id="BaseResultMap" type="org.xiaoheshan.piggy.bank.dal.dao.user.model.TestUserDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="name" />
    <result column="user_password" jdbcType="VARCHAR" property="password" />
    <result column="user_mobile" jdbcType="CHAR" property="mobile" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, user_password, user_mobile, gmt_created, gmt_modified
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from test_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.xiaoheshan.piggy.bank.dal.dao.user.model.TestUserDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into test_user (user_name, user_password, user_mobile, 
      gmt_created, gmt_modified)
    values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{mobile,jdbcType=CHAR}, 
      #{gmtCreated,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.xiaoheshan.piggy.bank.dal.dao.user.model.TestUserDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into test_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        user_name,
      </if>
      <if test="password != null">
        user_password,
      </if>
      <if test="mobile != null">
        user_mobile,
      </if>
      <if test="gmtCreated != null">
        gmt_created,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="gmtCreated != null">
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.xiaoheshan.piggy.bank.dal.dao.user.model.TestUserDO">
    update test_user
    <set>
      <if test="name != null">
        user_name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        user_password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        user_mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="gmtCreated != null">
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.xiaoheshan.piggy.bank.dal.dao.user.model.TestUserDO">
    update test_user
    set user_name = #{name,jdbcType=VARCHAR},
      user_password = #{password,jdbcType=VARCHAR},
      user_mobile = #{mobile,jdbcType=CHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="MysqlDialectPrefix">
    <if test="page != null">
      from test_user where id in ( select id from ( select id 
    </if>
  </sql>
  <sql id="MysqlDialectSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin}, #{page.length} ) as temp_page_table) ]]>
      <if test="orderByClause != null">
        order by ${orderByClause}
      </if>
    </if>
  </sql>
</mapper>